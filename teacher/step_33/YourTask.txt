Ментор обращает ваше внимание на качество кода.

Хорошее ИТ решение это не просто решение, которое выполняет
все предъявленные к нему требования. Это решение, которое
легко понять и легко расширять и изменять. Поэтому, чтобы
стать профессионалом, нужно следить за качеством кода,
который вы создаёте.

Вы хотите стать крутым программистом?
Тогда давайте познакомимся с правилом бойскаутов!

Правило бойскаутов.

“Всегда оставляйте лагерь чище, чем он был до вас”
— это отличнейшее правило, по которому стоит жить.

Если вы нашли мусор на земле, вы убираете его,
вне зависимости от того, кто его оставил.
Это одно из правил скаутов.

То же самое должно применяться и в программировании.

Как перефразировал это правило Роберт С. Мартин:
“Оставь свой код лучше, чем он был до тебя”.

Если вы встретили какой-то трудный для чтения
участок кода, написанный кем-то другим, и потратили
время на его понимание, сделайте его хотя
бы немного лучше. Если это выходит за рамки задачи,
над которой вы работаете, всегда можно создать новое
техническое задание, хорошо его описать и перейти
к следующему спринту.

Мы должны помнить, что кто-то когда-то возьмет
на себя ту часть кода, который мы когда-то
разработали, и попытается его изменить.
Давайте хотя бы не будем усложнять их жизнь.

А лучше сделаем код с которым мы работаем
хоть чуточку лучше! Позитивные изменения
со временем накапливаются, так же как и негативные.
Код приложения может постепенно улучшаться, а может
загнивать и превращаться в навозную яму.

С каким кодом вы хотите работать?

Все зависит от вас самих!

Рефакторинг (англ. refactoring) — это процесс изменения
внутренней структуры программы, не затрагивающий её внешнего
поведения и имеющий целью облегчить понимание её работы.

На тему рефакторинга классической является книга авторов
Martin Fowler, Kent Beck, Refactoring: Improving the Design of Existing Code:
First edition: https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672
Second edition: https://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Signature/dp/0134757599

На тему clean code классикой является The Clean Coder (by Robert C. Martin):
https://www.amazon.com/Robert-Martinand-Professional-Programmers-Paperback/dp/B07VK8VZ9B

Ваша задача: улучшить код в классе
TravelCalculatePremiumServiceImpl, провести рефакторинг
если это возможно. Цель рефакторинга - улучшить читабельность
кода и подготовить его к будущим изменениям.

Подсказка: попробуйте при рефакторинге воспользоваться
функциональным стилем написания кода.

PS: не забудьте по окончанию выполнения шага создать и заполнить
файл /documentation/Step_X_description.txt. Формат заполнения этого
файла описан в step_1 в файле Learning_reflection.txt.