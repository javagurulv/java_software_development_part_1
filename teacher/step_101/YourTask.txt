Ваш ментор перфекционист, он очень любит качественный код.
Он хочет привить эту любовь и вам. Поэтому ментор обращает
ваше внимание на класс TravelPremiumUnderwritingImpl и его
метод calculatePremium(). Очевидно, что расчёт премии
состоит из двух частей:
- расчёт премии для каждого риска (List<RiskPremium> riskPremiums);
- расчёта общей премии полиса (BigDecimal totalPremium).

Ментор предлагает вынести расчёт премии для каждого выбранного риска в
отдельный класс (например SelectedRisksPremiumCalculator). Это
упростит код в классе TravelPremiumUnderwritingImpl и позволит
написать более качественные JUnit тесты.

Ваша задача: выполнить предложенный ментором рефакторинг.
Не забудьте про Junit тесты, в них тоже нужно внести изменения
после выполнения рефакторинга.

PS: не забудьте по окончанию выполнения шага создать и заполнить
файл /documentation/Step_X_description.txt. Формат заполнения этого
файла описан в step_1 в файле Learning_reflection.txt.